#ifndef _ZQ_CNN_LSTM_32F_ALIGN_C_H_
#define _ZQ_CNN_LSTM_32F_ALIGN_C_H_
#include "../ZQ_CNN_CompileConfig.h"
#if defined(__cplusplus) || defined(c_plusplus) 
extern "C" {
#endif

	void zq_cnn_lstm_TF_32f_align0_general(
		const float* in_data,
		int in_N,
		int in_W,
		int in_C,
		int in_pixelStep,
		int in_sliceStep,
		const float* xc_I_data,
		int xc_I_pixelStep,
		int xc_I_sliceStep,
		const float* xc_F_data,
		int xc_F_pixelStep,
		int xc_F_sliceStep,
		const float* xc_O_data,
		int xc_O_pixelStep,
		int xc_O_sliceStep,
		const float* xc_G_data,
		int xc_G_pixelStep,
		int xc_G_sliceStep,
		const float* hc_I_data,
		int hc_I_pixelStep,
		int hc_I_sliceStep,
		const float* hc_F_data,
		int hc_F_pixelStep,
		int hc_F_sliceStep,
		const float* hc_O_data,
		int hc_O_pixelStep,
		int hc_O_sliceStep,
		const float* hc_G_data,
		int hc_G_pixelStep,
		int hc_G_sliceStep,
		const float* b_I_data,
		const float* b_F_data,
		const float* b_O_data,
		const float* b_G_data,
		float* out_data,
		int out_pixelStep,
		int out_sliceStep,
		int hidden_dim,
		int is_fw,
		float forget_bias,
		float cell_clip,
		void** buffer,
		__int64* buffer_len);

#if __ARM_NEON

	void zq_cnn_lstm_TF_32f_align128bit(
		const float* in_data,
		int in_N,
		int in_W,
		int in_C,
		int in_pixelStep,
		int in_sliceStep,
		const float* xc_I_data,
		int xc_I_pixelStep,
		int xc_I_sliceStep,
		const float* xc_F_data,
		int xc_F_pixelStep,
		int xc_F_sliceStep,
		const float* xc_O_data,
		int xc_O_pixelStep,
		int xc_O_sliceStep,
		const float* xc_G_data,
		int xc_G_pixelStep,
		int xc_G_sliceStep,
		const float* hc_I_data,
		int hc_I_pixelStep,
		int hc_I_sliceStep,
		const float* hc_F_data,
		int hc_F_pixelStep,
		int hc_F_sliceStep,
		const float* hc_O_data,
		int hc_O_pixelStep,
		int hc_O_sliceStep,
		const float* hc_G_data,
		int hc_G_pixelStep,
		int hc_G_sliceStep,
		const float* b_I_data,
		const float* b_F_data,
		const float* b_O_data,
		const float* b_G_data,
		float* out_data,
		int out_pixelStep,
		int out_sliceStep,
		int hidden_dim,
		int is_fw,
		float forget_bias,
		float cell_clip,
		void** buffer,
		__int64* buffer_len);

#else

#if ZQ_CNN_USE_SSETYPE >= ZQ_CNN_SSETYPE_SSE
	void zq_cnn_lstm_TF_32f_align128bit(
		const float* in_data,
		int in_N,
		int in_W,
		int in_C,
		int in_pixelStep,
		int in_sliceStep,
		const float* xc_I_data,
		int xc_I_pixelStep,
		int xc_I_sliceStep,
		const float* xc_F_data,
		int xc_F_pixelStep,
		int xc_F_sliceStep,
		const float* xc_O_data,
		int xc_O_pixelStep,
		int xc_O_sliceStep,
		const float* xc_G_data,
		int xc_G_pixelStep,
		int xc_G_sliceStep,
		const float* hc_I_data,
		int hc_I_pixelStep,
		int hc_I_sliceStep,
		const float* hc_F_data,
		int hc_F_pixelStep,
		int hc_F_sliceStep,
		const float* hc_O_data,
		int hc_O_pixelStep,
		int hc_O_sliceStep,
		const float* hc_G_data,
		int hc_G_pixelStep,
		int hc_G_sliceStep,
		const float* b_I_data,
		const float* b_F_data,
		const float* b_O_data,
		const float* b_G_data,
		float* out_data,
		int out_pixelStep,
		int out_sliceStep,
		int hidden_dim,
		int is_fw,
		float forget_bias,
		float cell_clip,
		void** buffer,
		__int64* buffer_len);

#endif

#if ZQ_CNN_USE_SSETYPE >= ZQ_CNN_SSETYPE_AVX
	void zq_cnn_lstm_TF_32f_align256bit(
		const float* in_data,
		int in_N,
		int in_W,
		int in_C,
		int in_pixelStep,
		int in_sliceStep,
		const float* xc_I_data,
		int xc_I_pixelStep,
		int xc_I_sliceStep,
		const float* xc_F_data,
		int xc_F_pixelStep,
		int xc_F_sliceStep,
		const float* xc_O_data,
		int xc_O_pixelStep,
		int xc_O_sliceStep,
		const float* xc_G_data,
		int xc_G_pixelStep,
		int xc_G_sliceStep,
		const float* hc_I_data,
		int hc_I_pixelStep,
		int hc_I_sliceStep,
		const float* hc_F_data,
		int hc_F_pixelStep,
		int hc_F_sliceStep,
		const float* hc_O_data,
		int hc_O_pixelStep,
		int hc_O_sliceStep,
		const float* hc_G_data,
		int hc_G_pixelStep,
		int hc_G_sliceStep,
		const float* b_I_data,
		const float* b_F_data,
		const float* b_O_data,
		const float* b_G_data,
		float* out_data,
		int out_pixelStep,
		int out_sliceStep,
		int hidden_dim,
		int is_fw,
		float forget_bias,
		float cell_clip,
		void** buffer,
		__int64* buffer_len);
#endif

#endif //__ARM_NEON

#if defined(__cplusplus) || defined(c_plusplus) //跨平台定义方法
}
#endif
#endif